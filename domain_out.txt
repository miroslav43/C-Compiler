=== Running domain analysis test ===
bin/atomc tests/testad.c
Analyzing file: tests/testad.c
1 - TYPE_INT
1 - ID: x
1 - SEMICOLON
2 - TYPE_CHAR
2 - ID: y
2 - SEMICOLON
3 - TYPE_DOUBLE
3 - ID: z
3 - SEMICOLON
4 - TYPE_DOUBLE
4 - ID: p
4 - LBRACKET
4 - INT: 100
4 - RBRACKET
4 - SEMICOLON
6 - STRUCT
6 - ID: S1
7 - LACC
8 - TYPE_INT
8 - ID: i
8 - SEMICOLON
9 - TYPE_DOUBLE
9 - ID: d
9 - LBRACKET
9 - INT: 2
9 - RBRACKET
9 - SEMICOLON
10 - TYPE_CHAR
10 - ID: x
10 - SEMICOLON
11 - RACC
11 - SEMICOLON
12 - STRUCT
12 - ID: S1
12 - ID: p1
12 - SEMICOLON
13 - STRUCT
13 - ID: S1
13 - ID: vp
13 - LBRACKET
13 - INT: 10
13 - RBRACKET
13 - SEMICOLON
15 - TYPE_DOUBLE
15 - ID: sum
15 - LPAR
15 - TYPE_DOUBLE
15 - ID: x
15 - LBRACKET
15 - INT: 5
15 - RBRACKET
15 - COMMA
15 - TYPE_INT
15 - ID: n
15 - RPAR
16 - LACC
17 - TYPE_DOUBLE
17 - ID: r
17 - SEMICOLON
18 - TYPE_INT
18 - ID: i
18 - SEMICOLON
19 - ID: r
19 - ASSIGN
19 - INT: 0
19 - SEMICOLON
20 - ID: i
20 - ASSIGN
20 - INT: 0
20 - SEMICOLON
21 - WHILE
21 - LPAR
21 - ID: i
21 - LESS
21 - ID: n
21 - RPAR
22 - LACC
23 - TYPE_DOUBLE
23 - ID: n
23 - SEMICOLON
24 - ID: n
24 - ASSIGN
24 - ID: x
24 - LBRACKET
24 - ID: i
24 - RBRACKET
24 - SEMICOLON
25 - ID: r
25 - ASSIGN
25 - ID: r
25 - ADD
25 - ID: n
25 - SEMICOLON
26 - ID: i
26 - ASSIGN
26 - ID: i
26 - ADD
26 - INT: 1
26 - SEMICOLON
27 - RACC
28 - RETURN
28 - ID: r
28 - SEMICOLON
29 - RACC
31 - VOID
31 - ID: f
31 - LPAR
31 - STRUCT
31 - ID: S1
31 - ID: p
31 - RPAR
32 - LACC
33 - ID: puti
33 - LPAR
33 - ID: p
33 - DOT
33 - ID: i
33 - RPAR
33 - SEMICOLON
34 - RACC
35 - END

Starting syntax analysis...
Syntax analysis completed successfully.
// domain: global
int x;	// size=4, mem=0x134607630
char y;	// size=1, mem=0x1346076a0
double z;	// size=8, mem=0x134607710
double p[100];	// size=800, mem=0x134607780
struct S1{
	int i;	// size=4, idx=0
	double d[2];	// size=16, idx=4
	char x;	// size=1, idx=20
	};	// size=21
struct S1 p1;	// size=21, mem=0x134607bd0
struct S1 vp[10];	// size=210, mem=0x134607d50
double sum(double x[] /*size=8, idx=0*/, int n /*size=4, idx=1*/){
	double r;	// size=8, idx=0
	int i;	// size=4, idx=1
	double n;	// size=8, idx=2
	}
void f(struct S1 p /*size=21, idx=0*/){
	}
Compilation successful!
